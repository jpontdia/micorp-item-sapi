<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:json-logger="http://www.mulesoft.org/schema/mule/json-logger" 
	xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns="http://www.mulesoft.org/schema/mule/core" 
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core 
		http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/ee/core 
		http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
		http://www.mulesoft.org/schema/mule/salesforce 
		http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd
		http://www.mulesoft.org/schema/mule/json-logger
		http://www.mulesoft.org/schema/mule/json-logger/current/mule-json-logger.xsd">
	
	<flow name="queryItem">

		<ee:transform doc:name="Where Filter" >
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="soqlFilter"><![CDATA[%dw 2.0
import modules::soql

var sqlFilter1 = soql::soqlBuilder("", "AND",
        soql::stringParameter("	Order__c", vars.orderId))
var sqlFilter2 = soql::soqlBuilder(sqlFilter1, "AND",
        soql::stringParameter("Id", vars.itemId))
output application/json
---
sqlFilter2	]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<salesforce:query
			doc:name="Item" 
			config-ref="GlobalSalesforceConfig">
			<salesforce:salesforce-query><![CDATA[SELECT id, name, Order__c, quantity__c, size__c, sourceId__c, category__c
FROM Item__c 
 :soqlFilter]]></salesforce:salesforce-query>
			<salesforce:parameters><![CDATA[#[output application/java
---
{
	soqlFilter : vars.soqlFilter
}]]]></salesforce:parameters>
		</salesforce:query>
		
		<logger 
			level="DEBUG" 
			doc:name="Logger"
			category="app" 
			message="#[${file::script-records-found.dwl}]"/>
		
		<ee:transform doc:name="Customer Payload">
			<ee:message >
				<ee:set-payload ><![CDATA[${file::script-records-from-payload.dwl}]]></ee:set-payload>
			</ee:message>
		</ee:transform>			
		
		<error-handler ref="global-error-handler" />
	</flow>
	
	
	
	<flow name="get:\items" >
	
		<logger 
			level="INFO" 
			doc:name="start" 
			message='#["Items for orderId=" ++ attributes.queryParams.orderId]' category="app"/>
		
		<set-variable value='#[%dw 2.0&#10;output application/java&#10;---&#10;{&#10;    "orderId": attributes.queryParams.orderId default ""&#10;}]' doc:name="otel Tags" doc:id="7dd612c1-759b-472e-ab16-11ad102c557c" variableName="openTelemetryTags" />
		
		<set-variable 
			value="#[attributes.queryParams.orderId]" 
			doc:name="orderId" 
			variableName="orderId" />
		
		<flow-ref 
			doc:name="queryItem"
			name="queryItem"/>
		
		<error-handler ref="global-error-handler" />
	</flow>
	
	
	<flow name="get:\items\(itemId)" >
	
		<logger 
			level="INFO" 
			doc:name="start" 
			message="#[&quot;Item getById itemId=&quot; ++ attributes.uriParams.'itemId']" category="app"/>
				
		<set-variable 
			value="#[%dw 2.0&#10;output application/java&#10;---&#10;{&#10;    &quot;itemId&quot;: attributes.uriParams.'itemId' default &quot;&quot;&#10;}]"
			doc:name="otel Tags" 
			variableName="openTelemetryTags" />
		
		<set-variable 
			value="#[attributes.uriParams.'itemId']" 
			doc:name="itemId" 
			variableName="itemId" />
		
		<flow-ref doc:name="queryItem"  name="queryItem" />
		
		<ee:transform doc:name="getItem" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
if (payload[0] == null) "" else payload[0]]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		
		<error-handler ref="global-error-handler" />
	</flow>
</mule>
